---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { Image } from 'astro:assets';

interface Props {
  post: CollectionEntry<'posts'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({
    params: { slug: post.id },
    props: {
      post: post
    }
  }));
}

const { post } = Astro.props;

const { Content } = await render(post);
---

<Layout>
  <section class="flex flex-col gap-10 opacity-0" data-animate-inview>
    <Image
      src={post.data.image}
      alt={post.data.title}
      class="h-72 w-full rounded-lg object-cover"
    />
    <div class="-mt-3 flex items-center gap-3 text-dark-mode-gray-light">
      <span
        >{
          post.data.date.toLocaleDateString('en-US', {
            month: 'long',
            day: 'numeric',
            year: 'numeric'
          })
        }</span
      >
      <span class="ml-auto">{post.data.readingTime} min read</span>
    </div>
    <h1 class="text-3xl font-bold leading-none text-white md:text-3xl">{post.data.title}</h1>
    <div data-content>
      <Content />
    </div>
  </section>
</Layout>

<style>
  [data-content] {
    h3 {
      @apply mb-5 mt-10 text-xl font-bold text-white;
    }

    * {
      @apply text-sm text-dark-mode-gray-light md:text-base;
    }

    p {
      @apply mb-2;
    }

    ul {
      @apply flex list-inside list-disc flex-col gap-2;
    }

    a {
      @apply text-white underline;
    }
  }
</style>

<script>
  const links = document.querySelectorAll('[data-content] a');
  links.forEach(link => {
    link.setAttribute('target', '_blank');
    link.setAttribute('rel', 'noopener noreferrer');
  });
</script>
